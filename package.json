{
  "name": "react-todo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "clean:dist": "rimraf dist",
    "clean:coverage": "rimraf coverage && rimraf .nyc_output",
    "clean:db": "rimraf data/*.sqlite",
    "precoverage": "npm run clean:coverage",
    "coverage": "cross-env BABEL_ENV=instrument nyc npm test",
    "db": "sequelize db:migrate && sequelize db:seed:all",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "cross-env NODE_ENV=test NODE_PATH=./src mocha --opts mocha.opts \"src/test/unit/**/*.test.js\"",
    "pretest:integration": "rimraf data/database-test.sqlite && cross-env NODE_ENV=test npm run db",
    "test:integration": "cross-env NODE_ENV=test NODE_PATH=./src mocha --opts mocha.opts \"src/test/integration/**/*.test.js\"",
    "lint": "eslint . --ext=js,jsx",
    "build": "npm run clean:dist && cross-env NODE_ENV=production webpack --progress --mode=\"production\"",
    "build-watch": "npm run clean:dist && cross-env NODE_ENV=development webpack -w --progress --mode=\"development\"",
    "prestart": "cross-env NODE_ENV=production npm run db",
    "start": "npm run build && npm run start:prod",
    "prestart-watch": "cross-env NODE_ENV=development npm run db",
    "start-watch": "concurrently -r --kill-others \"npm run build-watch\" \"npm run start:dev\"",
    "start:prod": "cross-env NODE_ENV=production node dist/server/server.js",
    "start:dev": "wait-on dist/server/server.js && cross-env NODE_ENV=development nodemon --inspect dist/server/server.js"
  },
  "author": "Tyler Waters",
  "license": "MIT",
  "devDependencies": {
    "@babel/cli": "^7.2.0",
    "@babel/core": "^7.2.2",
    "@babel/plugin-proposal-class-properties": "^7.2.1",
    "@babel/plugin-proposal-decorators": "^7.2.2",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-transform-runtime": "^7.2.0",
    "@babel/preset-env": "^7.2.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.0.0",
    "@babel/runtime": "^7.2.0",
    "babel-loader": "^8.0.4",
    "babel-plugin-istanbul": "^5.1.0",
    "bootstrap": "^3.4.0",
    "concurrently": "^4.1.0",
    "cross-env": "^3.1.3",
    "css-loader": "^2.0.1",
    "env-file-parser": "^1.0.0",
    "eslint": "^4.19.1",
    "fetch-mock": "^7.2.5",
    "file-loader": "^2.0.0",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.2.0",
    "less": "^3.9.0",
    "less-loader": "^4.1.0",
    "mini-css-extract-plugin": "^0.5.0",
    "mocha": "^5.2.0",
    "nodemon": "^1.18.9",
    "null-loader": "^0.1.1",
    "nyc": "^13.1.0",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "proxyquire": "^2.1.0",
    "redux-mock-store": "^1.5.3",
    "rimraf": "^2.6.2",
    "sinon": "^7.2.2",
    "style-loader": "^0.23.1",
    "supertest": "^3.3.0",
    "terser-webpack-plugin": "^1.1.0",
    "wait-on": "^2.1.2",
    "webpack": "^4.27.1",
    "webpack-cli": "^3.1.2",
    "webpack-node-externals": "^1.7.2"
  },
  "dependencies": {
    "body-parser": "^1.18.3",
    "classnames": "^2.2.6",
    "connect-flash": "^0.1.1",
    "connect-redis": "^3.4.0",
    "connected-react-router": "^6.0.0-beta.1",
    "ejs": "^2.6.1",
    "eslint-config-tswaters": "github:tswaters/eslint-config-tswaters",
    "express": "^4.16.4",
    "express-session": "^1.15.6",
    "font-awesome": "^4.7.0",
    "hashifier": "^1.0.0",
    "history": "^4.7.2",
    "ioredis": "^3.2.2",
    "isomorphic-fetch": "^2.2.1",
    "pino": "^5.10.1",
    "pino-pretty": "^2.5.0",
    "prop-types": "^15.6.2",
    "react": "^16.6.3",
    "react-dom": "^16.6.3",
    "react-helmet": "^5.2.0",
    "react-intl": "^2.7.2",
    "react-intl-redux": "^2.1.0",
    "react-redux": "^6.0.0",
    "react-router": "^4.4.0-beta.6",
    "react-router-config": "^4.4.0-beta.6",
    "react-router-dom": "^4.4.0-beta.6",
    "redux": "^3.7.2",
    "redux-logger": "^2.8.2",
    "redux-thunk": "^2.3.0",
    "reselect": "^2.5.4",
    "sequelize": "^4.42.0",
    "sequelize-cli": "^3.2.0",
    "source-map-support": "^0.5.9",
    "sqlite3": "^4.0.4",
    "uuid": "^3.3.2"
  },
  "nyc": {
    "include": [
      "src/**/*.js"
    ],
    "exclude": [
      "src/test/**",
      "src/db/**",
      "src/server/middleware/{logger,errors}.js",
      "src/server/models/index.js",
      "src/server/logger.js",
      "src/server/errors/**"
    ],
    "reporter": [
      "lcov",
      "text-summary"
    ],
    "require": [
      "babel-register"
    ],
    "sourceMap": false,
    "instrument": false
  }
}
